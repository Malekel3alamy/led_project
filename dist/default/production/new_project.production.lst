

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Sep 24 13:03:23 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  00FAF9                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_register
    63  00FAF9  80                 	db	128
    64  00FAFA  0F                 	db	15
    65  00FAFB  81                 	db	129
    66  00FAFC  0F                 	db	15
    67  00FAFD  82                 	db	130
    68  00FAFE  0F                 	db	15
    69  00FAFF  83                 	db	131
    70  00FB00  0F                 	db	15
    71  00FB01  84                 	db	132
    72  00FB02  0F                 	db	15
    73                           
    74                           ;initializer for _lat_register
    75  00FB03  89                 	db	137
    76  00FB04  0F                 	db	15
    77  00FB05  8A                 	db	138
    78  00FB06  0F                 	db	15
    79  00FB07  8B                 	db	139
    80  00FB08  0F                 	db	15
    81  00FB09  8C                 	db	140
    82  00FB0A  0F                 	db	15
    83  00FB0B  8D                 	db	141
    84  00FB0C  0F                 	db	15
    85                           
    86                           ;initializer for _tris_register
    87  00FB0D  92                 	db	146
    88  00FB0E  0F                 	db	15
    89  00FB0F  93                 	db	147
    90  00FB10  0F                 	db	15
    91  00FB11  94                 	db	148
    92  00FB12  0F                 	db	15
    93  00FB13  95                 	db	149
    94  00FB14  0F                 	db	15
    95  00FB15  96                 	db	150
    96  00FB16  0F                 	db	15
    97                           
    98                           ;initializer for _btn_1
    99  00FB17  43                 	db	67
   100                           
   101                           ;initializer for _led_3
   102  00FB18  12                 	db	18
   103                           
   104                           ;initializer for _led_2
   105  00FB19  0A                 	db	10
   106                           
   107                           ;initializer for _led_1
   108  00FB1A  02                 	db	2
   109                           
   110                           ;initializer for _ret
   111  00FB1B  01                 	db	1
   112                           
   113                           ;initializer for _led4
   114  00FB1C  32                 	db	50
   115                           
   116                           ;initializer for _led3
   117  00FB1D  22                 	db	34
   118                           
   119                           ;initializer for _led2
   120  00FB1E  12                 	db	18
   121                           
   122                           ;initializer for _led1
   123  00FB1F  02                 	db	2
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTD	set	3971
   126  0000                     _PORTC	set	3970
   127  0000                     _PORTB	set	3969
   128  0000                     _PORTA	set	3968
   129  0000                     _LATE	set	3981
   130  0000                     _LATD	set	3980
   131  0000                     _LATC	set	3979
   132  0000                     _LATB	set	3978
   133  0000                     _LATA	set	3977
   134  0000                     _TRISE	set	3990
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139                           
   140                           ; #config settings
   141                           
   142                           	psect	cinit
   143  00FB52                     __pcinit:
   144                           	callstack 0
   145  00FB52                     start_initialization:
   146                           	callstack 0
   147  00FB52                     __initialization:
   148                           	callstack 0
   149                           
   150                           ; Initialize objects allocated to COMRAM (39 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152  00FB52  0EF9               	movlw	low __pidataCOMRAM
   153  00FB54  6EF6               	movwf	tblptrl,c
   154  00FB56  0EFA               	movlw	high __pidataCOMRAM
   155  00FB58  6EF7               	movwf	tblptrh,c
   156  00FB5A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157  00FB5C  6EF8               	movwf	tblptru,c
   158  00FB5E  EE00  F001         	lfsr	0,__pdataCOMRAM
   159  00FB62  EE10 F027          	lfsr	1,39
   160  00FB66                     copy_data0:
   161  00FB66  0009               	tblrd		*+
   162  00FB68  CFF5 FFEE          	movff	tablat,postinc0
   163  00FB6C  50E5               	movf	postdec1,w,c
   164  00FB6E  50E1               	movf	fsr1l,w,c
   165  00FB70  E1FA               	bnz	copy_data0
   166                           
   167                           ; Clear objects allocated to COMRAM (8 bytes)
   168  00FB72  EE00  F03D         	lfsr	0,__pbssCOMRAM
   169  00FB76  0E08               	movlw	8
   170  00FB78                     clear_0:
   171  00FB78  6AEE               	clrf	postinc0,c
   172  00FB7A  06E8               	decf	wreg,f,c
   173  00FB7C  E1FD               	bnz	clear_0
   174  00FB7E                     end_of_initialization:
   175                           	callstack 0
   176  00FB7E                     __end_of__initialization:
   177                           	callstack 0
   178  00FB7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  00FB80  6EF8               	movwf	tblptru,c
   180  00FB82  0100               	movlb	0
   181  00FB84  EFAA  F07E         	goto	_main	;jump to C main() function
   182                           
   183                           	psect	bssCOMRAM
   184  00003D                     __pbssCOMRAM:
   185                           	callstack 0
   186  00003D                     _btn1_status:
   187                           	callstack 0
   188  00003D                     	ds	1
   189  00003E                     _led_1st:
   190                           	callstack 0
   191  00003E                     	ds	1
   192  00003F                     _portc_logic_status:
   193                           	callstack 0
   194  00003F                     	ds	1
   195  000040                     _portc_direction_status:
   196                           	callstack 0
   197  000040                     	ds	1
   198  000041                     led_turn_toggle@F2852:
   199                           	callstack 0
   200  000041                     	ds	1
   201  000042                     led_turn_off@F2847:
   202                           	callstack 0
   203  000042                     	ds	1
   204  000043                     led_turn_on@F2842:
   205                           	callstack 0
   206  000043                     	ds	1
   207  000044                     led_initialize@F2837:
   208                           	callstack 0
   209  000044                     	ds	1
   210                           
   211                           	psect	dataCOMRAM
   212  000001                     __pdataCOMRAM:
   213                           	callstack 0
   214  000001                     _port_register:
   215                           	callstack 0
   216  000001                     	ds	10
   217  00000B                     _lat_register:
   218                           	callstack 0
   219  00000B                     	ds	10
   220  000015                     _tris_register:
   221                           	callstack 0
   222  000015                     	ds	10
   223  00001F                     _btn_1:
   224                           	callstack 0
   225  00001F                     	ds	1
   226  000020                     _led_3:
   227                           	callstack 0
   228  000020                     	ds	1
   229  000021                     _led_2:
   230                           	callstack 0
   231  000021                     	ds	1
   232  000022                     _led_1:
   233                           	callstack 0
   234  000022                     	ds	1
   235  000023                     _ret:
   236                           	callstack 0
   237  000023                     	ds	1
   238  000024                     _led4:
   239                           	callstack 0
   240  000024                     	ds	1
   241  000025                     _led3:
   242                           	callstack 0
   243  000025                     	ds	1
   244  000026                     _led2:
   245                           	callstack 0
   246  000026                     	ds	1
   247  000027                     _led1:
   248                           	callstack 0
   249  000027                     	ds	1
   250                           
   251                           	psect	cstackCOMRAM
   252  000028                     __pcstackCOMRAM:
   253                           	callstack 0
   254  000028                     gpio_pin_dirction_initialize@_pin_config:
   255                           	callstack 0
   256  000028                     gpio_pin_write_logic@_pin_config:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260  000028                     	ds	2
   261  00002A                     ??_gpio_pin_dirction_initialize:
   262  00002A                     gpio_pin_write_logic@logic:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x2
   266  00002A                     	ds	1
   267  00002B                     ??_gpio_pin_write_logic:
   268                           
   269                           ; 1 bytes @ 0x3
   270  00002B                     	ds	5
   271  000030                     gpio_pin_dirction_initialize@ret:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x8
   275  000030                     	ds	1
   276  000031                     gpio_pin_write_logic@ret:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x9
   280  000031                     	ds	1
   281  000032                     led_turn_on@led:
   282                           	callstack 0
   283  000032                     led_turn_off@led:
   284                           	callstack 0
   285  000032                     gpio_pin_initialize@_pin_config:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xA
   289  000032                     	ds	2
   290  000034                     ??_gpio_pin_initialize:
   291  000034                     ??_led_turn_on:
   292  000034                     ??_led_turn_off:
   293                           
   294                           ; 1 bytes @ 0xC
   295  000034                     	ds	1
   296  000035                     led_turn_on@pin_obj:
   297                           	callstack 0
   298  000035                     led_turn_off@pin_obj:
   299                           	callstack 0
   300  000035                     gpio_pin_initialize@ret:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xD
   304  000035                     	ds	1
   305  000036                     led_initialize@led:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  000036                     	ds	2
   310  000038                     ??_led_initialize:
   311                           
   312                           ; 1 bytes @ 0x10
   313  000038                     	ds	1
   314  000039                     led_initialize@ret:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x11
   318  000039                     	ds	1
   319  00003A                     led_initialize@pin_obj:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x12
   323  00003A                     	ds	1
   324  00003B                     ??_main:
   325                           
   326                           ; 1 bytes @ 0x13
   327  00003B                     	ds	2
   328                           
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 53 in file "main_application.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  2  189[None  ] int 
   341 ;; Registers used:
   342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;Total ram usage:        2 bytes
   353 ;; Hardware stack levels required when called: 4
   354 ;; This function calls:
   355 ;;		_application_initialize
   356 ;;		_led_turn_off
   357 ;;		_led_turn_on
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364  00FD54                     __ptext0:
   365                           	callstack 0
   366  00FD54                     _main:
   367                           	callstack 27
   368  00FD54                     
   369                           ;main_application.c: 55:     application_initialize();
   370  00FD54  EC90  F07D         	call	_application_initialize	;wreg free
   371  00FD58                     l190:
   372                           
   373                           ;main_application.c: 57:        led_turn_on(&led1);
   374  00FD58  0E27               	movlw	low _led1
   375  00FD5A  6E32               	movwf	led_turn_on@led^0,c
   376  00FD5C  0E00               	movlw	high _led1
   377  00FD5E  6E33               	movwf	(led_turn_on@led+1)^0,c
   378  00FD60  EC32  F07E         	call	_led_turn_on	;wreg free
   379                           
   380                           ;main_application.c: 58:        led_turn_on(&led2);
   381  00FD64  0E26               	movlw	low _led2
   382  00FD66  6E32               	movwf	led_turn_on@led^0,c
   383  00FD68  0E00               	movlw	high _led2
   384  00FD6A  6E33               	movwf	(led_turn_on@led+1)^0,c
   385  00FD6C  EC32  F07E         	call	_led_turn_on	;wreg free
   386                           
   387                           ;main_application.c: 59:        led_turn_on(&led3);
   388  00FD70  0E25               	movlw	low _led3
   389  00FD72  6E32               	movwf	led_turn_on@led^0,c
   390  00FD74  0E00               	movlw	high _led3
   391  00FD76  6E33               	movwf	(led_turn_on@led+1)^0,c
   392  00FD78  EC32  F07E         	call	_led_turn_on	;wreg free
   393                           
   394                           ;main_application.c: 60:        led_turn_on(&led4);
   395  00FD7C  0E24               	movlw	low _led4
   396  00FD7E  6E32               	movwf	led_turn_on@led^0,c
   397  00FD80  0E00               	movlw	high _led4
   398  00FD82  6E33               	movwf	(led_turn_on@led+1)^0,c
   399  00FD84  EC32  F07E         	call	_led_turn_on	;wreg free
   400  00FD88                     
   401                           ;main_application.c: 61:        _delay((unsigned long)((250)*(8000000UL/4000.0)));
   402  00FD88  0E03               	movlw	3
   403  00FD8A  6E3C               	movwf	(??_main+1)^0,c
   404  00FD8C  0E8A               	movlw	138
   405  00FD8E  6E3B               	movwf	??_main^0,c
   406  00FD90  0E56               	movlw	86
   407  00FD92                     u557:
   408  00FD92  2EE8               	decfsz	wreg,f,c
   409  00FD94  D7FE               	bra	u557
   410  00FD96  2E3B               	decfsz	??_main^0,f,c
   411  00FD98  D7FC               	bra	u557
   412  00FD9A  2E3C               	decfsz	(??_main+1)^0,f,c
   413  00FD9C  D7FA               	bra	u557
   414  00FD9E                     
   415                           ;main_application.c: 62:        led_turn_off(&led1);
   416  00FD9E  0E27               	movlw	low _led1
   417  00FDA0  6E32               	movwf	led_turn_off@led^0,c
   418  00FDA2  0E00               	movlw	high _led1
   419  00FDA4  6E33               	movwf	(led_turn_off@led+1)^0,c
   420  00FDA6  ECF7  F07D         	call	_led_turn_off	;wreg free
   421  00FDAA                     
   422                           ;main_application.c: 63:        led_turn_off(&led2);
   423  00FDAA  0E26               	movlw	low _led2
   424  00FDAC  6E32               	movwf	led_turn_off@led^0,c
   425  00FDAE  0E00               	movlw	high _led2
   426  00FDB0  6E33               	movwf	(led_turn_off@led+1)^0,c
   427  00FDB2  ECF7  F07D         	call	_led_turn_off	;wreg free
   428  00FDB6                     
   429                           ;main_application.c: 64:        led_turn_off(&led3);
   430  00FDB6  0E25               	movlw	low _led3
   431  00FDB8  6E32               	movwf	led_turn_off@led^0,c
   432  00FDBA  0E00               	movlw	high _led3
   433  00FDBC  6E33               	movwf	(led_turn_off@led+1)^0,c
   434  00FDBE  ECF7  F07D         	call	_led_turn_off	;wreg free
   435  00FDC2                     
   436                           ;main_application.c: 65:        led_turn_off(&led4);
   437  00FDC2  0E24               	movlw	low _led4
   438  00FDC4  6E32               	movwf	led_turn_off@led^0,c
   439  00FDC6  0E00               	movlw	high _led4
   440  00FDC8  6E33               	movwf	(led_turn_off@led+1)^0,c
   441  00FDCA  ECF7  F07D         	call	_led_turn_off	;wreg free
   442  00FDCE                     
   443                           ;main_application.c: 66:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
   444  00FDCE  0E03               	movlw	3
   445  00FDD0  6E3C               	movwf	(??_main+1)^0,c
   446  00FDD2  0E8A               	movlw	138
   447  00FDD4  6E3B               	movwf	??_main^0,c
   448  00FDD6  0E56               	movlw	86
   449  00FDD8                     u567:
   450  00FDD8  2EE8               	decfsz	wreg,f,c
   451  00FDDA  D7FE               	bra	u567
   452  00FDDC  2E3B               	decfsz	??_main^0,f,c
   453  00FDDE  D7FC               	bra	u567
   454  00FDE0  2E3C               	decfsz	(??_main+1)^0,f,c
   455  00FDE2  D7FA               	bra	u567
   456  00FDE4  EFAC  F07E         	goto	l190
   457  00FDE8  EF00  F000         	goto	start
   458  00FDEC                     __end_of_main:
   459                           	callstack 0
   460                           
   461 ;; *************** function _led_turn_on *****************
   462 ;; Defined at:
   463 ;;		line 34 in file "ECU_LAYER/LED/ecu_led.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  led             2   10[COMRAM] PTR const struct .
   466 ;;		 -> led4(1), led3(1), led2(1), led1(1), 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  pin_obj         1   13[COMRAM] struct .
   469 ;;  ret             1    0        unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      unsigned char 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;Total ram usage:        4 bytes
   484 ;; Hardware stack levels used: 1
   485 ;; Hardware stack levels required when called: 1
   486 ;; This function calls:
   487 ;;		_gpio_pin_write_logic
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text1
   494  00FC64                     __ptext1:
   495                           	callstack 0
   496  00FC64                     _led_turn_on:
   497                           	callstack 29
   498  00FC64                     
   499                           ;ECU_LAYER/LED/ecu_led.c: 36:         if(((void*)0) == led){
   500  00FC64  5032               	movf	led_turn_on@led^0,w,c
   501  00FC66  1033               	iorwf	(led_turn_on@led+1)^0,w,c
   502  00FC68  A4D8               	btfss	status,2,c
   503  00FC6A  EF39  F07E         	goto	u511
   504  00FC6E  EF3B  F07E         	goto	u510
   505  00FC72                     u511:
   506  00FC72  EF3D  F07E         	goto	l16
   507  00FC76                     u510:
   508  00FC76                     
   509                           ;ECU_LAYER/LED/ecu_led.c: 38:         }
   510  00FC76  EF6C  F07E         	goto	l20
   511  00FC7A                     l16:
   512                           
   513                           ;ECU_LAYER/LED/ecu_led.c: 40:             pin_config_t pin_obj = {
   514  00FC7A  C043  F035         	movff	led_turn_on@F2842,led_turn_on@pin_obj
   515  00FC7E  C032  FFD9         	movff	led_turn_on@led,fsr2l
   516  00FC82  C033  FFDA         	movff	led_turn_on@led+1,fsr2h
   517  00FC86  50DF               	movf	indf2,w,c
   518  00FC88  0B0F               	andlw	15
   519  00FC8A  6E34               	movwf	??_led_turn_on^0,c
   520  00FC8C  5035               	movf	led_turn_on@pin_obj^0,w,c
   521  00FC8E  1834               	xorwf	??_led_turn_on^0,w,c
   522  00FC90  0BF8               	andlw	-8
   523  00FC92  1834               	xorwf	??_led_turn_on^0,w,c
   524  00FC94  6E35               	movwf	led_turn_on@pin_obj^0,c
   525  00FC96  C032  FFD9         	movff	led_turn_on@led,fsr2l
   526  00FC9A  C033  FFDA         	movff	led_turn_on@led+1,fsr2h
   527  00FC9E  38DF               	swapf	indf2,w,c
   528  00FCA0  0B07               	andlw	7
   529  00FCA2  6E34               	movwf	??_led_turn_on^0,c
   530  00FCA4  4634               	rlncf	??_led_turn_on^0,f,c
   531  00FCA6  4634               	rlncf	??_led_turn_on^0,f,c
   532  00FCA8  4634               	rlncf	??_led_turn_on^0,f,c
   533  00FCAA  5035               	movf	led_turn_on@pin_obj^0,w,c
   534  00FCAC  1834               	xorwf	??_led_turn_on^0,w,c
   535  00FCAE  0BC7               	andlw	-57
   536  00FCB0  1834               	xorwf	??_led_turn_on^0,w,c
   537  00FCB2  6E35               	movwf	led_turn_on@pin_obj^0,c
   538  00FCB4  9C35               	bcf	led_turn_on@pin_obj^0,6,c
   539  00FCB6  C032  FFD9         	movff	led_turn_on@led,fsr2l
   540  00FCBA  C033  FFDA         	movff	led_turn_on@led+1,fsr2h
   541  00FCBE  AEDF               	btfss	indf2,7,c
   542  00FCC0  D002               	bra	u525
   543  00FCC2  8E35               	bsf	led_turn_on@pin_obj^0,7,c
   544  00FCC4  D001               	bra	u527
   545  00FCC6                     u525:
   546  00FCC6  9E35               	bcf	led_turn_on@pin_obj^0,7,c
   547  00FCC8                     u527:
   548  00FCC8                     
   549                           ;ECU_LAYER/LED/ecu_led.c: 47:             gpio_pin_write_logic(&pin_obj , HIGH);
   550  00FCC8  0E35               	movlw	low led_turn_on@pin_obj
   551  00FCCA  6E28               	movwf	gpio_pin_write_logic@_pin_config^0,c
   552  00FCCC  0E00               	movlw	high led_turn_on@pin_obj
   553  00FCCE  6E29               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   554  00FCD0  0E01               	movlw	1
   555  00FCD2  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   556  00FCD4  EC6A  F07F         	call	_gpio_pin_write_logic	;wreg free
   557  00FCD8                     l20:
   558  00FCD8  0012               	return		;funcret
   559  00FCDA                     __end_of_led_turn_on:
   560                           	callstack 0
   561                           
   562 ;; *************** function _led_turn_off *****************
   563 ;; Defined at:
   564 ;;		line 58 in file "ECU_LAYER/LED/ecu_led.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  led             2   10[COMRAM] PTR const struct .
   567 ;;		 -> led4(1), led3(1), led2(1), led1(1), 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  pin_obj         1   13[COMRAM] struct .
   570 ;;  ret             1    0        unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      unsigned char 
   573 ;; Registers used:
   574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:        4 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 1
   587 ;; This function calls:
   588 ;;		_gpio_pin_write_logic
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text2
   595  00FBEE                     __ptext2:
   596                           	callstack 0
   597  00FBEE                     _led_turn_off:
   598                           	callstack 29
   599  00FBEE                     
   600                           ;ECU_LAYER/LED/ecu_led.c: 60:         if(((void*)0) == led){
   601  00FBEE  5032               	movf	led_turn_off@led^0,w,c
   602  00FBF0  1033               	iorwf	(led_turn_off@led+1)^0,w,c
   603  00FBF2  A4D8               	btfss	status,2,c
   604  00FBF4  EFFE  F07D         	goto	u531
   605  00FBF8  EF00  F07E         	goto	u530
   606  00FBFC                     u531:
   607  00FBFC  EF02  F07E         	goto	l23
   608  00FC00                     u530:
   609  00FC00                     
   610                           ;ECU_LAYER/LED/ecu_led.c: 62:         }
   611  00FC00  EF31  F07E         	goto	l27
   612  00FC04                     l23:
   613                           
   614                           ;ECU_LAYER/LED/ecu_led.c: 64:             pin_config_t pin_obj = {
   615  00FC04  C042  F035         	movff	led_turn_off@F2847,led_turn_off@pin_obj
   616  00FC08  C032  FFD9         	movff	led_turn_off@led,fsr2l
   617  00FC0C  C033  FFDA         	movff	led_turn_off@led+1,fsr2h
   618  00FC10  50DF               	movf	indf2,w,c
   619  00FC12  0B0F               	andlw	15
   620  00FC14  6E34               	movwf	??_led_turn_off^0,c
   621  00FC16  5035               	movf	led_turn_off@pin_obj^0,w,c
   622  00FC18  1834               	xorwf	??_led_turn_off^0,w,c
   623  00FC1A  0BF8               	andlw	-8
   624  00FC1C  1834               	xorwf	??_led_turn_off^0,w,c
   625  00FC1E  6E35               	movwf	led_turn_off@pin_obj^0,c
   626  00FC20  C032  FFD9         	movff	led_turn_off@led,fsr2l
   627  00FC24  C033  FFDA         	movff	led_turn_off@led+1,fsr2h
   628  00FC28  38DF               	swapf	indf2,w,c
   629  00FC2A  0B07               	andlw	7
   630  00FC2C  6E34               	movwf	??_led_turn_off^0,c
   631  00FC2E  4634               	rlncf	??_led_turn_off^0,f,c
   632  00FC30  4634               	rlncf	??_led_turn_off^0,f,c
   633  00FC32  4634               	rlncf	??_led_turn_off^0,f,c
   634  00FC34  5035               	movf	led_turn_off@pin_obj^0,w,c
   635  00FC36  1834               	xorwf	??_led_turn_off^0,w,c
   636  00FC38  0BC7               	andlw	-57
   637  00FC3A  1834               	xorwf	??_led_turn_off^0,w,c
   638  00FC3C  6E35               	movwf	led_turn_off@pin_obj^0,c
   639  00FC3E  9C35               	bcf	led_turn_off@pin_obj^0,6,c
   640  00FC40  C032  FFD9         	movff	led_turn_off@led,fsr2l
   641  00FC44  C033  FFDA         	movff	led_turn_off@led+1,fsr2h
   642  00FC48  AEDF               	btfss	indf2,7,c
   643  00FC4A  D002               	bra	u545
   644  00FC4C  8E35               	bsf	led_turn_off@pin_obj^0,7,c
   645  00FC4E  D001               	bra	u547
   646  00FC50                     u545:
   647  00FC50  9E35               	bcf	led_turn_off@pin_obj^0,7,c
   648  00FC52                     u547:
   649  00FC52                     
   650                           ;ECU_LAYER/LED/ecu_led.c: 71:             gpio_pin_write_logic(&pin_obj , LOW);
   651  00FC52  0E35               	movlw	low led_turn_off@pin_obj
   652  00FC54  6E28               	movwf	gpio_pin_write_logic@_pin_config^0,c
   653  00FC56  0E00               	movlw	high led_turn_off@pin_obj
   654  00FC58  6E29               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   655  00FC5A  0E00               	movlw	0
   656  00FC5C  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   657  00FC5E  EC6A  F07F         	call	_gpio_pin_write_logic	;wreg free
   658  00FC62                     l27:
   659  00FC62  0012               	return		;funcret
   660  00FC64                     __end_of_led_turn_off:
   661                           	callstack 0
   662                           
   663 ;; *************** function _application_initialize *****************
   664 ;; Defined at:
   665 ;;		line 72 in file "main_application.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  ret             1    0        unsigned char 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 3
   686 ;; This function calls:
   687 ;;		_led_initialize
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text3
   694  00FB20                     __ptext3:
   695                           	callstack 0
   696  00FB20                     _application_initialize:
   697                           	callstack 27
   698  00FB20  0E27               	movlw	low _led1
   699  00FB22  6E36               	movwf	led_initialize@led^0,c
   700  00FB24  0E00               	movlw	high _led1
   701  00FB26  6E37               	movwf	(led_initialize@led+1)^0,c
   702  00FB28  EC6D  F07E         	call	_led_initialize	;wreg free
   703  00FB2C  0E26               	movlw	low _led2
   704  00FB2E  6E36               	movwf	led_initialize@led^0,c
   705  00FB30  0E00               	movlw	high _led2
   706  00FB32  6E37               	movwf	(led_initialize@led+1)^0,c
   707  00FB34  EC6D  F07E         	call	_led_initialize	;wreg free
   708  00FB38  0E25               	movlw	low _led3
   709  00FB3A  6E36               	movwf	led_initialize@led^0,c
   710  00FB3C  0E00               	movlw	high _led3
   711  00FB3E  6E37               	movwf	(led_initialize@led+1)^0,c
   712  00FB40  EC6D  F07E         	call	_led_initialize	;wreg free
   713  00FB44  0E24               	movlw	low _led4
   714  00FB46  6E36               	movwf	led_initialize@led^0,c
   715  00FB48  0E00               	movlw	high _led4
   716  00FB4A  6E37               	movwf	(led_initialize@led+1)^0,c
   717  00FB4C  EC6D  F07E         	call	_led_initialize	;wreg free
   718  00FB50  0012               	return		;funcret
   719  00FB52                     __end_of_application_initialize:
   720                           	callstack 0
   721                           
   722 ;; *************** function _led_initialize *****************
   723 ;; Defined at:
   724 ;;		line 12 in file "ECU_LAYER/LED/ecu_led.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  led             2   14[COMRAM] PTR const struct .
   727 ;;		 -> led4(1), led3(1), led2(1), led1(1), 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  pin_obj         1   18[COMRAM] struct .
   730 ;;  ret             1   17[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      unsigned char 
   733 ;; Registers used:
   734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        5 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 2
   747 ;; This function calls:
   748 ;;		_gpio_pin_initialize
   749 ;; This function is called by:
   750 ;;		_application_initialize
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text4
   755  00FCDA                     __ptext4:
   756                           	callstack 0
   757  00FCDA                     _led_initialize:
   758                           	callstack 27
   759  00FCDA                     
   760                           ;ECU_LAYER/LED/ecu_led.c: 13:         STD_RETURN_TYPE ret = (STD_RETURN_TYPE)0x01;
   761  00FCDA  0E01               	movlw	1
   762  00FCDC  6E39               	movwf	led_initialize@ret^0,c
   763  00FCDE                     
   764                           ;ECU_LAYER/LED/ecu_led.c: 14:         if(((void*)0) == led){
   765  00FCDE  5036               	movf	led_initialize@led^0,w,c
   766  00FCE0  1037               	iorwf	(led_initialize@led+1)^0,w,c
   767  00FCE2  A4D8               	btfss	status,2,c
   768  00FCE4  EF76  F07E         	goto	u491
   769  00FCE8  EF78  F07E         	goto	u490
   770  00FCEC                     u491:
   771  00FCEC  EF7C  F07E         	goto	l9
   772  00FCF0                     u490:
   773  00FCF0                     
   774                           ;ECU_LAYER/LED/ecu_led.c: 15:             ret = (STD_RETURN_TYPE)0x00 ;
   775  00FCF0  0E00               	movlw	0
   776  00FCF2  6E39               	movwf	led_initialize@ret^0,c
   777                           
   778                           ;ECU_LAYER/LED/ecu_led.c: 16:         }
   779  00FCF4  EFA8  F07E         	goto	l1186
   780  00FCF8                     l9:
   781                           
   782                           ;ECU_LAYER/LED/ecu_led.c: 18:             pin_config_t pin_obj = {
   783  00FCF8  C044  F03A         	movff	led_initialize@F2837,led_initialize@pin_obj
   784  00FCFC  C036  FFD9         	movff	led_initialize@led,fsr2l
   785  00FD00  C037  FFDA         	movff	led_initialize@led+1,fsr2h
   786  00FD04  50DF               	movf	indf2,w,c
   787  00FD06  0B0F               	andlw	15
   788  00FD08  6E38               	movwf	??_led_initialize^0,c
   789  00FD0A  503A               	movf	led_initialize@pin_obj^0,w,c
   790  00FD0C  1838               	xorwf	??_led_initialize^0,w,c
   791  00FD0E  0BF8               	andlw	-8
   792  00FD10  1838               	xorwf	??_led_initialize^0,w,c
   793  00FD12  6E3A               	movwf	led_initialize@pin_obj^0,c
   794  00FD14  C036  FFD9         	movff	led_initialize@led,fsr2l
   795  00FD18  C037  FFDA         	movff	led_initialize@led+1,fsr2h
   796  00FD1C  38DF               	swapf	indf2,w,c
   797  00FD1E  0B07               	andlw	7
   798  00FD20  6E38               	movwf	??_led_initialize^0,c
   799  00FD22  4638               	rlncf	??_led_initialize^0,f,c
   800  00FD24  4638               	rlncf	??_led_initialize^0,f,c
   801  00FD26  4638               	rlncf	??_led_initialize^0,f,c
   802  00FD28  503A               	movf	led_initialize@pin_obj^0,w,c
   803  00FD2A  1838               	xorwf	??_led_initialize^0,w,c
   804  00FD2C  0BC7               	andlw	-57
   805  00FD2E  1838               	xorwf	??_led_initialize^0,w,c
   806  00FD30  6E3A               	movwf	led_initialize@pin_obj^0,c
   807  00FD32  C036  FFD9         	movff	led_initialize@led,fsr2l
   808  00FD36  C037  FFDA         	movff	led_initialize@led+1,fsr2h
   809  00FD3A  AEDF               	btfss	indf2,7,c
   810  00FD3C  D002               	bra	u505
   811  00FD3E  8E3A               	bsf	led_initialize@pin_obj^0,7,c
   812  00FD40  D001               	bra	u507
   813  00FD42                     u505:
   814  00FD42  9E3A               	bcf	led_initialize@pin_obj^0,7,c
   815  00FD44                     u507:
   816  00FD44                     
   817                           ;ECU_LAYER/LED/ecu_led.c: 23:             gpio_pin_initialize(&pin_obj);
   818  00FD44  0E3A               	movlw	low led_initialize@pin_obj
   819  00FD46  6E32               	movwf	gpio_pin_initialize@_pin_config^0,c
   820  00FD48  0E00               	movlw	high led_initialize@pin_obj
   821  00FD4A  6E33               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   822  00FD4C  ECC4  F07D         	call	_gpio_pin_initialize	;wreg free
   823  00FD50                     l1186:
   824                           
   825                           ;ECU_LAYER/LED/ecu_led.c: 25:         return ret ;
   826  00FD50  5039               	movf	led_initialize@ret^0,w,c
   827  00FD52  0012               	return		;funcret
   828  00FD54                     __end_of_led_initialize:
   829                           	callstack 0
   830                           
   831 ;; *************** function _gpio_pin_initialize *****************
   832 ;; Defined at:
   833 ;;		line 69 in file "MCAL_LAYER/GPIO/hal_gpio.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  _pin_config     2   10[COMRAM] PTR const struct .
   836 ;;		 -> led_initialize@pin_obj(1), 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  ret             1   13[COMRAM] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      unsigned char 
   841 ;; Registers used:
   842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;Total ram usage:        4 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 1
   855 ;; This function calls:
   856 ;;		_gpio_pin_dirction_initialize
   857 ;;		_gpio_pin_write_logic
   858 ;; This function is called by:
   859 ;;		_led_initialize
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864  00FB88                     __ptext5:
   865                           	callstack 0
   866  00FB88                     _gpio_pin_initialize:
   867                           	callstack 27
   868  00FB88                     
   869                           ;MCAL_LAYER/GPIO/hal_gpio.c: 71:     if( ((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1 ){
   870  00FB88  5032               	movf	gpio_pin_initialize@_pin_config^0,w,c
   871  00FB8A  1033               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
   872  00FB8C  B4D8               	btfsc	status,2,c
   873  00FB8E  EFCB  F07D         	goto	u471
   874  00FB92  EFCD  F07D         	goto	u470
   875  00FB96                     u471:
   876  00FB96  EFDE  F07D         	goto	l1168
   877  00FB9A                     u470:
   878  00FB9A  C032  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
   879  00FB9E  C033  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
   880  00FBA2  30DF               	rrcf	indf2,w,c
   881  00FBA4  32E8               	rrcf	wreg,f,c
   882  00FBA6  32E8               	rrcf	wreg,f,c
   883  00FBA8  0B07               	andlw	7
   884  00FBAA  6E34               	movwf	??_gpio_pin_initialize^0,c
   885  00FBAC  0E07               	movlw	7
   886  00FBAE  6434               	cpfsgt	??_gpio_pin_initialize^0,c
   887  00FBB0  EFDC  F07D         	goto	u481
   888  00FBB4  EFDE  F07D         	goto	u480
   889  00FBB8                     u481:
   890  00FBB8  EFE0  F07D         	goto	l1170
   891  00FBBC                     u480:
   892  00FBBC                     l1168:
   893                           
   894                           ;MCAL_LAYER/GPIO/hal_gpio.c: 73:     }
   895  00FBBC  EFF6  F07D         	goto	l98
   896  00FBC0                     l1170:
   897                           
   898                           ;MCAL_LAYER/GPIO/hal_gpio.c: 75:         ret = gpio_pin_dirction_initialize(_pin_config)
      +                          ;
   899  00FBC0  C032  F028         	movff	gpio_pin_initialize@_pin_config,gpio_pin_dirction_initialize@_pin_config
   900  00FBC4  C033  F029         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_dirction_initialize@_pin_config+1
   901  00FBC8  ECF6  F07E         	call	_gpio_pin_dirction_initialize	;wreg free
   902  00FBCC  6E35               	movwf	gpio_pin_initialize@ret^0,c
   903                           
   904                           ;MCAL_LAYER/GPIO/hal_gpio.c: 76:         ret = gpio_pin_write_logic(_pin_config , _pin_c
      +                          onfig->logic);
   905  00FBCE  C032  F028         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
   906  00FBD2  C033  F029         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
   907  00FBD6  C032  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
   908  00FBDA  C033  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
   909  00FBDE  0E00               	movlw	0
   910  00FBE0  BEDF               	btfsc	indf2,7,c
   911  00FBE2  0E01               	movlw	1
   912  00FBE4  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   913  00FBE6  EC6A  F07F         	call	_gpio_pin_write_logic	;wreg free
   914  00FBEA  6E35               	movwf	gpio_pin_initialize@ret^0,c
   915  00FBEC                     l98:
   916  00FBEC  0012               	return		;funcret
   917  00FBEE                     __end_of_gpio_pin_initialize:
   918                           	callstack 0
   919                           
   920 ;; *************** function _gpio_pin_write_logic *****************
   921 ;; Defined at:
   922 ;;		line 91 in file "MCAL_LAYER/GPIO/hal_gpio.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   925 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   926 ;;  logic           1    2[COMRAM] enum E2757
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  ret             1    9[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      unsigned char 
   931 ;; Registers used:
   932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:       10 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_led_turn_on
   948 ;;		_led_turn_off
   949 ;;		_gpio_pin_initialize
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text6
   954  00FED4                     __ptext6:
   955                           	callstack 0
   956  00FED4                     _gpio_pin_write_logic:
   957                           	callstack 29
   958  00FED4                     
   959                           ;MCAL_LAYER/GPIO/hal_gpio.c: 92:         STD_RETURN_TYPE ret = (STD_RETURN_TYPE)0x01;
   960  00FED4  0E01               	movlw	1
   961  00FED6  6E31               	movwf	gpio_pin_write_logic@ret^0,c
   962  00FED8                     
   963                           ;MCAL_LAYER/GPIO/hal_gpio.c: 93:         if( _pin_config == ((void*)0) || _pin_config->p
      +                          in > 8 -1){
   964  00FED8  5028               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   965  00FEDA  1029               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
   966  00FEDC  B4D8               	btfsc	status,2,c
   967  00FEDE  EF73  F07F         	goto	u381
   968  00FEE2  EF75  F07F         	goto	u380
   969  00FEE6                     u381:
   970  00FEE6  EF86  F07F         	goto	l1124
   971  00FEEA                     u380:
   972  00FEEA  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   973  00FEEE  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   974  00FEF2  30DF               	rrcf	indf2,w,c
   975  00FEF4  32E8               	rrcf	wreg,f,c
   976  00FEF6  32E8               	rrcf	wreg,f,c
   977  00FEF8  0B07               	andlw	7
   978  00FEFA  6E2B               	movwf	??_gpio_pin_write_logic^0,c
   979  00FEFC  0E07               	movlw	7
   980  00FEFE  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
   981  00FF00  EF84  F07F         	goto	u391
   982  00FF04  EF86  F07F         	goto	u390
   983  00FF08                     u391:
   984  00FF08  EFE9  F07F         	goto	l1132
   985  00FF0C                     u390:
   986  00FF0C                     l1124:
   987                           
   988                           ;MCAL_LAYER/GPIO/hal_gpio.c: 94:         ret = (STD_RETURN_TYPE)0x00 ;
   989  00FF0C  0E00               	movlw	0
   990  00FF0E  6E31               	movwf	gpio_pin_write_logic@ret^0,c
   991                           
   992                           ;MCAL_LAYER/GPIO/hal_gpio.c: 95:     }
   993  00FF10  EFFE  F07F         	goto	l1134
   994  00FF14                     l1126:
   995                           
   996                           ;MCAL_LAYER/GPIO/hal_gpio.c: 99:                     (*lat_register[_pin_config->port] |
      +                          = ((uint8)1 << _pin_config->pin));
   997  00FF14  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   998  00FF18  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   999  00FF1C  30DF               	rrcf	indf2,w,c
  1000  00FF1E  32E8               	rrcf	wreg,f,c
  1001  00FF20  32E8               	rrcf	wreg,f,c
  1002  00FF22  0B07               	andlw	7
  1003  00FF24  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1004  00FF26  0E01               	movlw	1
  1005  00FF28  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1006  00FF2A  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1007  00FF2C  EF9A  F07F         	goto	u404
  1008  00FF30                     u405:
  1009  00FF30  90D8               	bcf	status,0,c
  1010  00FF32  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1011  00FF34                     u404:
  1012  00FF34  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1013  00FF36  EF98  F07F         	goto	u405
  1014  00FF3A  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1015  00FF3E  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1016  00FF42  50DF               	movf	indf2,w,c
  1017  00FF44  0B07               	andlw	7
  1018  00FF46  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1019  00FF48  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1020  00FF4A  0D02               	mullw	2
  1021  00FF4C  0E0B               	movlw	low _lat_register
  1022  00FF4E  24F3               	addwf	243,w,c
  1023  00FF50  6ED9               	movwf	fsr2l,c
  1024  00FF52  0E00               	movlw	high _lat_register
  1025  00FF54  20F4               	addwfc	prodh,w,c
  1026  00FF56  6EDA               	movwf	fsr2h,c
  1027  00FF58  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  1028  00FF5C  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  1029  00FF60  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1030  00FF64  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1031  00FF68  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1032  00FF6A  12DF               	iorwf	indf2,f,c
  1033                           
  1034                           ;MCAL_LAYER/GPIO/hal_gpio.c: 100:                     break;
  1035  00FF6C  EFFE  F07F         	goto	l1134
  1036  00FF70                     l1128:
  1037                           
  1038                           ;MCAL_LAYER/GPIO/hal_gpio.c: 102:                     (*lat_register[_pin_config->port] 
      +                          &= ~((uint8)1 << _pin_config->pin));
  1039  00FF70  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1040  00FF74  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1041  00FF78  30DF               	rrcf	indf2,w,c
  1042  00FF7A  32E8               	rrcf	wreg,f,c
  1043  00FF7C  32E8               	rrcf	wreg,f,c
  1044  00FF7E  0B07               	andlw	7
  1045  00FF80  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1046  00FF82  0E01               	movlw	1
  1047  00FF84  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1048  00FF86  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1049  00FF88  EFC8  F07F         	goto	u414
  1050  00FF8C                     u415:
  1051  00FF8C  90D8               	bcf	status,0,c
  1052  00FF8E  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1053  00FF90                     u414:
  1054  00FF90  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1055  00FF92  EFC6  F07F         	goto	u415
  1056  00FF96  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1057  00FF98  0AFF               	xorlw	255
  1058  00FF9A  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1059  00FF9C  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1060  00FFA0  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1061  00FFA4  50DF               	movf	indf2,w,c
  1062  00FFA6  0B07               	andlw	7
  1063  00FFA8  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1064  00FFAA  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1065  00FFAC  0D02               	mullw	2
  1066  00FFAE  0E0B               	movlw	low _lat_register
  1067  00FFB0  24F3               	addwf	243,w,c
  1068  00FFB2  6ED9               	movwf	fsr2l,c
  1069  00FFB4  0E00               	movlw	high _lat_register
  1070  00FFB6  20F4               	addwfc	prodh,w,c
  1071  00FFB8  6EDA               	movwf	fsr2h,c
  1072  00FFBA  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  1073  00FFBE  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  1074  00FFC2  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1075  00FFC6  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1076  00FFCA  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1077  00FFCC  16DF               	andwf	indf2,f,c
  1078                           
  1079                           ;MCAL_LAYER/GPIO/hal_gpio.c: 103:                     break;
  1080  00FFCE  EFFE  F07F         	goto	l1134
  1081  00FFD2                     l1132:
  1082  00FFD2  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  1083  00FFD4  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1084  00FFD6  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1085                           
  1086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1087                           ; Switch size 1, requested type "simple"
  1088                           ; Number of cases is 1, Range of values is 0 to 0
  1089                           ; switch strategies available:
  1090                           ; Name         Instructions Cycles
  1091                           ; simple_byte            4     3 (average)
  1092                           ;	Chosen strategy is simple_byte
  1093  00FFD8  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1094  00FFDA  0A00               	xorlw	0	; case 0
  1095  00FFDC  B4D8               	btfsc	status,2,c
  1096  00FFDE  EFF3  F07F         	goto	l1254
  1097  00FFE2  EF86  F07F         	goto	l1124
  1098  00FFE6                     l1254:
  1099                           
  1100                           ; Switch size 1, requested type "simple"
  1101                           ; Number of cases is 2, Range of values is 0 to 1
  1102                           ; switch strategies available:
  1103                           ; Name         Instructions Cycles
  1104                           ; simple_byte            7     4 (average)
  1105                           ;	Chosen strategy is simple_byte
  1106  00FFE6  502B               	movf	??_gpio_pin_write_logic^0,w,c
  1107  00FFE8  0A00               	xorlw	0	; case 0
  1108  00FFEA  B4D8               	btfsc	status,2,c
  1109  00FFEC  EFB8  F07F         	goto	l1128
  1110  00FFF0  0A01               	xorlw	1	; case 1
  1111  00FFF2  B4D8               	btfsc	status,2,c
  1112  00FFF4  EF8A  F07F         	goto	l1126
  1113  00FFF8  EF86  F07F         	goto	l1124
  1114  00FFFC                     l1134:
  1115                           
  1116                           ;MCAL_LAYER/GPIO/hal_gpio.c: 108:         return ret ;
  1117  00FFFC  5031               	movf	gpio_pin_write_logic@ret^0,w,c
  1118  00FFFE  0012               	return		;funcret
  1119  010000                     __end_of_gpio_pin_write_logic:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _gpio_pin_dirction_initialize *****************
  1123 ;; Defined at:
  1124 ;;		line 18 in file "MCAL_LAYER/GPIO/hal_gpio.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1127 ;;		 -> led_initialize@pin_obj(1), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  ret             1    8[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      unsigned char 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:        9 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_gpio_pin_initialize
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text7
  1153  00FDEC                     __ptext7:
  1154                           	callstack 0
  1155  00FDEC                     _gpio_pin_dirction_initialize:
  1156                           	callstack 27
  1157  00FDEC                     
  1158                           ;MCAL_LAYER/GPIO/hal_gpio.c: 19:     STD_RETURN_TYPE ret = (STD_RETURN_TYPE)0x01;
  1159  00FDEC  0E01               	movlw	1
  1160  00FDEE  6E30               	movwf	gpio_pin_dirction_initialize@ret^0,c
  1161  00FDF0                     
  1162                           ;MCAL_LAYER/GPIO/hal_gpio.c: 20:     if( _pin_config == ((void*)0) || _pin_config->pin >
      +                           8 -1 ){
  1163  00FDF0  5028               	movf	gpio_pin_dirction_initialize@_pin_config^0,w,c
  1164  00FDF2  1029               	iorwf	(gpio_pin_dirction_initialize@_pin_config+1)^0,w,c
  1165  00FDF4  B4D8               	btfsc	status,2,c
  1166  00FDF6  EFFF  F07E         	goto	u421
  1167  00FDFA  EF01  F07F         	goto	u420
  1168  00FDFE                     u421:
  1169  00FDFE  EF12  F07F         	goto	l1148
  1170  00FE02                     u420:
  1171  00FE02  C028  FFD9         	movff	gpio_pin_dirction_initialize@_pin_config,fsr2l
  1172  00FE06  C029  FFDA         	movff	gpio_pin_dirction_initialize@_pin_config+1,fsr2h
  1173  00FE0A  30DF               	rrcf	indf2,w,c
  1174  00FE0C  32E8               	rrcf	wreg,f,c
  1175  00FE0E  32E8               	rrcf	wreg,f,c
  1176  00FE10  0B07               	andlw	7
  1177  00FE12  6E2A               	movwf	??_gpio_pin_dirction_initialize^0,c
  1178  00FE14  0E07               	movlw	7
  1179  00FE16  642A               	cpfsgt	??_gpio_pin_dirction_initialize^0,c
  1180  00FE18  EF10  F07F         	goto	u431
  1181  00FE1C  EF12  F07F         	goto	u430
  1182  00FE20                     u431:
  1183  00FE20  EF47  F07F         	goto	l1152
  1184  00FE24                     u430:
  1185  00FE24                     l1148:
  1186                           
  1187                           ;MCAL_LAYER/GPIO/hal_gpio.c: 21:         ret = (STD_RETURN_TYPE)0x00 ;
  1188  00FE24  0E00               	movlw	0
  1189  00FE26  6E30               	movwf	gpio_pin_dirction_initialize@ret^0,c
  1190                           
  1191                           ;MCAL_LAYER/GPIO/hal_gpio.c: 22:     }
  1192  00FE28  EF68  F07F         	goto	l1154
  1193  00FE2C                     l1150:
  1194                           
  1195                           ;MCAL_LAYER/GPIO/hal_gpio.c: 26:             (*tris_register[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  1196  00FE2C  C028  FFD9         	movff	gpio_pin_dirction_initialize@_pin_config,fsr2l
  1197  00FE30  C029  FFDA         	movff	gpio_pin_dirction_initialize@_pin_config+1,fsr2h
  1198  00FE34  30DF               	rrcf	indf2,w,c
  1199  00FE36  32E8               	rrcf	wreg,f,c
  1200  00FE38  32E8               	rrcf	wreg,f,c
  1201  00FE3A  0B07               	andlw	7
  1202  00FE3C  6E2A               	movwf	??_gpio_pin_dirction_initialize^0,c
  1203  00FE3E  0E01               	movlw	1
  1204  00FE40  6E2B               	movwf	(??_gpio_pin_dirction_initialize+1)^0,c
  1205  00FE42  2A2A               	incf	??_gpio_pin_dirction_initialize^0,f,c
  1206  00FE44  EF26  F07F         	goto	u444
  1207  00FE48                     u445:
  1208  00FE48  90D8               	bcf	status,0,c
  1209  00FE4A  362B               	rlcf	(??_gpio_pin_dirction_initialize+1)^0,f,c
  1210  00FE4C                     u444:
  1211  00FE4C  2E2A               	decfsz	??_gpio_pin_dirction_initialize^0,f,c
  1212  00FE4E  EF24  F07F         	goto	u445
  1213  00FE52  502B               	movf	(??_gpio_pin_dirction_initialize+1)^0,w,c
  1214  00FE54  0AFF               	xorlw	255
  1215  00FE56  6E2C               	movwf	(??_gpio_pin_dirction_initialize+2)^0,c
  1216  00FE58  C028  FFD9         	movff	gpio_pin_dirction_initialize@_pin_config,fsr2l
  1217  00FE5C  C029  FFDA         	movff	gpio_pin_dirction_initialize@_pin_config+1,fsr2h
  1218  00FE60  50DF               	movf	indf2,w,c
  1219  00FE62  0B07               	andlw	7
  1220  00FE64  6E2D               	movwf	(??_gpio_pin_dirction_initialize+3)^0,c
  1221  00FE66  502D               	movf	(??_gpio_pin_dirction_initialize+3)^0,w,c
  1222  00FE68  0D02               	mullw	2
  1223  00FE6A  0E15               	movlw	low _tris_register
  1224  00FE6C  24F3               	addwf	243,w,c
  1225  00FE6E  6ED9               	movwf	fsr2l,c
  1226  00FE70  0E00               	movlw	high _tris_register
  1227  00FE72  20F4               	addwfc	prodh,w,c
  1228  00FE74  6EDA               	movwf	fsr2h,c
  1229  00FE76  CFDE F02E          	movff	postinc2,??_gpio_pin_dirction_initialize+4
  1230  00FE7A  CFDD F02F          	movff	postdec2,??_gpio_pin_dirction_initialize+5
  1231  00FE7E  C02E  FFD9         	movff	??_gpio_pin_dirction_initialize+4,fsr2l
  1232  00FE82  C02F  FFDA         	movff	??_gpio_pin_dirction_initialize+5,fsr2h
  1233  00FE86  502C               	movf	(??_gpio_pin_dirction_initialize+2)^0,w,c
  1234  00FE88  16DF               	andwf	indf2,f,c
  1235                           
  1236                           ;MCAL_LAYER/GPIO/hal_gpio.c: 27:             break;
  1237  00FE8A  EF68  F07F         	goto	l1154
  1238  00FE8E                     l1152:
  1239  00FE8E  C028  FFD9         	movff	gpio_pin_dirction_initialize@_pin_config,fsr2l
  1240  00FE92  C029  FFDA         	movff	gpio_pin_dirction_initialize@_pin_config+1,fsr2h
  1241  00FE96  BCDF               	btfsc	indf2,6,c
  1242  00FE98  EF50  F07F         	goto	u451
  1243  00FE9C  EF53  F07F         	goto	u450
  1244  00FEA0                     u451:
  1245  00FEA0  0E01               	movlw	1
  1246  00FEA2  EF54  F07F         	goto	u460
  1247  00FEA6                     u450:
  1248  00FEA6  0E00               	movlw	0
  1249  00FEA8                     u460:
  1250  00FEA8  6E2A               	movwf	??_gpio_pin_dirction_initialize^0,c
  1251  00FEAA  6A2B               	clrf	(??_gpio_pin_dirction_initialize+1)^0,c
  1252                           
  1253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 1, Range of values is 0 to 0
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte            4     3 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260  00FEAC  502B               	movf	(??_gpio_pin_dirction_initialize+1)^0,w,c
  1261  00FEAE  0A00               	xorlw	0	; case 0
  1262  00FEB0  B4D8               	btfsc	status,2,c
  1263  00FEB2  EF5D  F07F         	goto	l1256
  1264  00FEB6  EF68  F07F         	goto	l1154
  1265  00FEBA                     l1256:
  1266                           
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 2, Range of values is 0 to 1
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte            7     4 (average)
  1272                           ;	Chosen strategy is simple_byte
  1273  00FEBA  502A               	movf	??_gpio_pin_dirction_initialize^0,w,c
  1274  00FEBC  0A00               	xorlw	0	; case 0
  1275  00FEBE  B4D8               	btfsc	status,2,c
  1276  00FEC0  EF16  F07F         	goto	l1150
  1277  00FEC4  0A01               	xorlw	1	; case 1
  1278  00FEC6  B4D8               	btfsc	status,2,c
  1279  00FEC8  EF68  F07F         	goto	l1154
  1280  00FECC  EF68  F07F         	goto	l1154
  1281  00FED0                     l1154:
  1282                           
  1283                           ;MCAL_LAYER/GPIO/hal_gpio.c: 35:     return ret ;
  1284  00FED0  5030               	movf	gpio_pin_dirction_initialize@ret^0,w,c
  1285  00FED2  0012               	return		;funcret
  1286  00FED4                     __end_of_gpio_pin_dirction_initialize:
  1287                           	callstack 0
  1288  0000                     
  1289                           	psect	rparam
  1290  0000                     
  1291                           	psect	idloc
  1292                           
  1293                           ;Config register IDLOC0 @ 0x200000
  1294                           ;	unspecified, using default values
  1295  200000                     	org	2097152
  1296  200000  FF                 	db	255
  1297                           
  1298                           ;Config register IDLOC1 @ 0x200001
  1299                           ;	unspecified, using default values
  1300  200001                     	org	2097153
  1301  200001  FF                 	db	255
  1302                           
  1303                           ;Config register IDLOC2 @ 0x200002
  1304                           ;	unspecified, using default values
  1305  200002                     	org	2097154
  1306  200002  FF                 	db	255
  1307                           
  1308                           ;Config register IDLOC3 @ 0x200003
  1309                           ;	unspecified, using default values
  1310  200003                     	org	2097155
  1311  200003  FF                 	db	255
  1312                           
  1313                           ;Config register IDLOC4 @ 0x200004
  1314                           ;	unspecified, using default values
  1315  200004                     	org	2097156
  1316  200004  FF                 	db	255
  1317                           
  1318                           ;Config register IDLOC5 @ 0x200005
  1319                           ;	unspecified, using default values
  1320  200005                     	org	2097157
  1321  200005  FF                 	db	255
  1322                           
  1323                           ;Config register IDLOC6 @ 0x200006
  1324                           ;	unspecified, using default values
  1325  200006                     	org	2097158
  1326  200006  FF                 	db	255
  1327                           
  1328                           ;Config register IDLOC7 @ 0x200007
  1329                           ;	unspecified, using default values
  1330  200007                     	org	2097159
  1331  200007  FF                 	db	255
  1332                           
  1333                           	psect	config
  1334                           
  1335                           ; Padding undefined space
  1336  300000                     	org	3145728
  1337  300000  FF                 	db	255
  1338                           
  1339                           ;Config register CONFIG1H @ 0x300001
  1340                           ;	Oscillator Selection bits
  1341                           ;	OSC = HS, HS oscillator
  1342                           ;	Fail-Safe Clock Monitor Enable bit
  1343                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1344                           ;	Internal/External Oscillator Switchover bit
  1345                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1346  300001                     	org	3145729
  1347  300001  02                 	db	2
  1348                           
  1349                           ;Config register CONFIG2L @ 0x300002
  1350                           ;	Power-up Timer Enable bit
  1351                           ;	PWRT = OFF, PWRT disabled
  1352                           ;	Brown-out Reset Enable bits
  1353                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1354                           ;	Brown Out Reset Voltage bits
  1355                           ;	BORV = 1, 
  1356  300002                     	org	3145730
  1357  300002  0F                 	db	15
  1358                           
  1359                           ;Config register CONFIG2H @ 0x300003
  1360                           ;	Watchdog Timer Enable bit
  1361                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1362                           ;	Watchdog Timer Postscale Select bits
  1363                           ;	WDTPS = 32768, 1:32768
  1364  300003                     	org	3145731
  1365  300003  1E                 	db	30
  1366                           
  1367                           ; Padding undefined space
  1368  300004                     	org	3145732
  1369  300004  FF                 	db	255
  1370                           
  1371                           ;Config register CONFIG3H @ 0x300005
  1372                           ;	CCP2 MUX bit
  1373                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1374                           ;	PORTB A/D Enable bit
  1375                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1376                           ;	Low-Power Timer1 Oscillator Enable bit
  1377                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1378                           ;	MCLR Pin Enable bit
  1379                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1380  300005                     	org	3145733
  1381  300005  83                 	db	131
  1382                           
  1383                           ;Config register CONFIG4L @ 0x300006
  1384                           ;	Stack Full/Underflow Reset Enable bit
  1385                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1386                           ;	Single-Supply ICSP Enable bit
  1387                           ;	LVP = OFF, Single-Supply ICSP disabled
  1388                           ;	Extended Instruction Set Enable bit
  1389                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1390                           ;	Background Debugger Enable bit
  1391                           ;	DEBUG = 0x1, unprogrammed default
  1392  300006                     	org	3145734
  1393  300006  81                 	db	129
  1394                           
  1395                           ; Padding undefined space
  1396  300007                     	org	3145735
  1397  300007  FF                 	db	255
  1398                           
  1399                           ;Config register CONFIG5L @ 0x300008
  1400                           ;	Code Protection bit
  1401                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1402                           ;	Code Protection bit
  1403                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1404                           ;	Code Protection bit
  1405                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1406                           ;	Code Protection bit
  1407                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1408  300008                     	org	3145736
  1409  300008  0F                 	db	15
  1410                           
  1411                           ;Config register CONFIG5H @ 0x300009
  1412                           ;	Boot Block Code Protection bit
  1413                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1414                           ;	Data EEPROM Code Protection bit
  1415                           ;	CPD = OFF, Data EEPROM not code-protected
  1416  300009                     	org	3145737
  1417  300009  C0                 	db	192
  1418                           
  1419                           ;Config register CONFIG6L @ 0x30000A
  1420                           ;	Write Protection bit
  1421                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1422                           ;	Write Protection bit
  1423                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1424                           ;	Write Protection bit
  1425                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1426                           ;	Write Protection bit
  1427                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1428  30000A                     	org	3145738
  1429  30000A  0F                 	db	15
  1430                           
  1431                           ;Config register CONFIG6H @ 0x30000B
  1432                           ;	Configuration Register Write Protection bit
  1433                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1434                           ;	Boot Block Write Protection bit
  1435                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1436                           ;	Data EEPROM Write Protection bit
  1437                           ;	WRTD = OFF, Data EEPROM not write-protected
  1438  30000B                     	org	3145739
  1439  30000B  E0                 	db	224
  1440                           
  1441                           ;Config register CONFIG7L @ 0x30000C
  1442                           ;	Table Read Protection bit
  1443                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1444                           ;	Table Read Protection bit
  1445                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1446                           ;	Table Read Protection bit
  1447                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1448                           ;	Table Read Protection bit
  1449                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1450  30000C                     	org	3145740
  1451  30000C  0F                 	db	15
  1452                           
  1453                           ;Config register CONFIG7H @ 0x30000D
  1454                           ;	Boot Block Table Read Protection bit
  1455                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1456  30000D                     	org	3145741
  1457  30000D  40                 	db	64
  1458                           tosu	equ	0xFFF
  1459                           tosh	equ	0xFFE
  1460                           tosl	equ	0xFFD
  1461                           stkptr	equ	0xFFC
  1462                           pclatu	equ	0xFFB
  1463                           pclath	equ	0xFFA
  1464                           pcl	equ	0xFF9
  1465                           tblptru	equ	0xFF8
  1466                           tblptrh	equ	0xFF7
  1467                           tblptrl	equ	0xFF6
  1468                           tablat	equ	0xFF5
  1469                           prodh	equ	0xFF4
  1470                           prodl	equ	0xFF3
  1471                           indf0	equ	0xFEF
  1472                           postinc0	equ	0xFEE
  1473                           postdec0	equ	0xFED
  1474                           preinc0	equ	0xFEC
  1475                           plusw0	equ	0xFEB
  1476                           fsr0h	equ	0xFEA
  1477                           fsr0l	equ	0xFE9
  1478                           wreg	equ	0xFE8
  1479                           indf1	equ	0xFE7
  1480                           postinc1	equ	0xFE6
  1481                           postdec1	equ	0xFE5
  1482                           preinc1	equ	0xFE4
  1483                           plusw1	equ	0xFE3
  1484                           fsr1h	equ	0xFE2
  1485                           fsr1l	equ	0xFE1
  1486                           bsr	equ	0xFE0
  1487                           indf2	equ	0xFDF
  1488                           postinc2	equ	0xFDE
  1489                           postdec2	equ	0xFDD
  1490                           preinc2	equ	0xFDC
  1491                           plusw2	equ	0xFDB
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_dirction_initialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_initialize@pin_obj(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _application_initialize->_led_initialize
    _led_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3633
                                             19 COMRAM     2     2      0
             _application_initialize
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    1067
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    1067
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    1499
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2    1494
                                             14 COMRAM     5     3      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    1041
                                             10 COMRAM     4     2      2
       _gpio_pin_dirction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3     635
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_dirction_initialize                         9     7      2     210
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _led_initialize
       _gpio_pin_initialize
         _gpio_pin_dirction_initialize
         _gpio_pin_write_logic
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      44       1       53.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      34        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Sep 24 13:03:23 2022

                                      l9 FCF8                                       l20 FCD8  
                                     l13 FD52                                       l23 FC04  
                                     l16 FC7A                                       l27 FC62  
                                     l84 FED2                                       l98 FBEC  
                                    l110 FFFE                                      l190 FD58  
                                    l196 FB50                                      u420 FE02  
                                    u404 FF34                                      u421 FDFE  
                                    u405 FF30                                      u430 FE24  
                                    u414 FF90                                      u510 FC76  
                                    u431 FE20                                      u415 FF8C  
                                    u511 FC72                                      u505 FD42  
                                    u450 FEA6                                      u530 FC00  
                                    u451 FEA0                                      u507 FD44  
                                    u531 FBFC                                      u460 FEA8  
                                    u444 FE4C                                      u380 FEEA  
                                    u445 FE48                                      u381 FEE6  
                                    u525 FCC6                                      u390 FF0C  
                                    u470 FB9A                                      u391 FF08  
                                    u471 FB96                                      u527 FCC8  
                                    u480 FBBC                                      u481 FBB8  
                                    u545 FC50                                      u490 FCF0  
                                    u491 FCEC                                      u547 FC52  
                                    u557 FD92                                      u567 FDD8  
                                    _ret 0023                                      prod 000FF3  
                    led_initialize@F2837 0044                                      wreg 000FE8  
                           ?_led_turn_on 0032                                     l1120 FED8  
                                   l1200 FCB6                                     l1122 FEEA  
                                   l1210 FC00                                     l1202 FCC8  
                                   l1132 FFD2                                     l1124 FF0C  
                                   l1212 FC08                                     l1150 FE2C  
                                   l1142 FDEC                                     l1126 FF14  
                                   l1134 FFFC                                     l1118 FED4  
                                   l1230 FB44                                     l1222 FB20  
                                   l1214 FC3E                                     l1206 FBEE  
                                   l1152 FE8E                                     l1144 FDF0  
                                   l1128 FF70                                     l1224 FB20  
                                   l1216 FC40                                     l1208 FBEE  
                                   l1240 FDB6                                     l1232 FD54  
                                   l1154 FED0                                     l1146 FE02  
                                   l1170 FBC0                                     l1162 FB88  
                                   l1226 FB2C                                     l1218 FC52  
                                   l1242 FDC2                                     l1234 FD88  
                                   l1148 FE24                                     l1164 FB88  
                                   l1180 FCFC                                     l1228 FB38  
                                   l1244 FDCE                                     l1236 FD9E  
                                   l1254 FFE6                                     l1166 FB9A  
                                   l1182 FD32                                     l1174 FCDA  
                                   l1190 FC64                                     l1238 FDAA  
                                   l1256 FEBA                                     l1168 FBBC  
                                   l1184 FD44                                     l1176 FCDE  
                                   l1192 FC64                                     l1186 FD50  
                                   l1178 FCF0                                     l1194 FC76  
                                   l1196 FC7E                                     l1198 FCB4  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _led1 0027  
                                   _led2 0026                                     _led3 0025  
                                   _led4 0024                                     _main FD54  
                                   fsr2h 000FDA                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                 __end_of_led_initialize FD54                                     prodl 000FF3  
                                   start 0000                            ?_led_turn_off 0032  
                           ___param_bank 000000                     _gpio_pin_write_logic FED4  
                                  ?_main 0028                 ??_application_initialize 003B  
                                  _PORTA 000F80                                    _PORTB 000F81  
                                  _PORTC 000F82                                    _PORTD 000F83  
                                  _PORTE 000F84                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                                  _led_1 0022                                    _btn_1 001F  
                                  _led_2 0021                                    _led_3 0020  
                                  tablat 000FF5                                    status 000FD8  
                        ?_led_initialize 0036                           ??_led_turn_off 0034  
                        __initialization FB52                             __end_of_main FDEC  
                  ?_gpio_pin_write_logic 0028                                   ??_main 003B  
                          __activetblptr 000002                         led_turn_on@F2842 0043  
           __size_of_gpio_pin_initialize 0066                            _tris_register 0015  
                                 clear_0 FB78                    led_initialize@pin_obj 003A  
                                 isa$std 000001          __size_of_application_initialize 0032  
                           __pdataCOMRAM 0001                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                   __size_of_led_turn_on 0076                               __accesstop 0080  
                __end_of__initialization FB7E                            ___rparam_used 000001  
                      led_initialize@led 0036                        led_initialize@ret 0039  
                 ??_gpio_pin_write_logic 002B                           __pcstackCOMRAM 0028  
                   __end_of_led_turn_off FC64                   _application_initialize FB20  
                      led_turn_off@F2847 0042                     led_turn_toggle@F2852 0041  
                       ??_led_initialize 0038                                  __Hparam 0000  
                                __Lparam 0000                      _gpio_pin_initialize FB88  
                                __pcinit FB52                                  __ramtop 1000  
                                _led_1st 003E                                  __ptext0 FD54  
                                __ptext1 FC64                                  __ptext2 FBEE  
                                __ptext3 FB20                                  __ptext4 FCDA  
                                __ptext5 FB88                                  __ptext6 FED4  
                                __ptext7 FDEC                     ?_gpio_pin_initialize 0032  
                   end_of_initialization FB7E                            __Lmediumconst 0000  
                    led_turn_off@pin_obj 0035                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                    __size_of_led_turn_off 0076  
                  ??_gpio_pin_initialize 0034                             _led_turn_off FBEE  
                          __pidataCOMRAM FAF9                      start_initialization FB52  
                          ??_led_turn_on 0034                             _lat_register 000B  
                ?_application_initialize 0028          gpio_pin_dirction_initialize@ret 0030  
                        led_turn_off@led 0032            __size_of_gpio_pin_write_logic 012C  
                            __pbssCOMRAM 003D           __end_of_application_initialize FB52  
                            _btn1_status 003D                      __end_of_led_turn_on FCDA  
        gpio_pin_write_logic@_pin_config 0028                gpio_pin_write_logic@logic 002A  
                     led_turn_on@pin_obj 0035     __end_of_gpio_pin_dirction_initialize FED4  
  __size_of_gpio_pin_dirction_initialize 00E8             _gpio_pin_dirction_initialize FDEC  
                 gpio_pin_initialize@ret 0035                              _led_turn_on FC64  
                gpio_pin_write_logic@ret 0031                                copy_data0 FB66  
                         led_turn_on@led 0032                                 __Hrparam 0000  
                __size_of_led_initialize 007A                                 __Lrparam 0000  
          ?_gpio_pin_dirction_initialize 0028              __end_of_gpio_pin_initialize FBEE  
         gpio_pin_initialize@_pin_config 0032  gpio_pin_dirction_initialize@_pin_config 0028  
                 _portc_direction_status 0040                            __size_of_main 0098  
                               isa$xinst 000000                       _portc_logic_status 003F  
           __end_of_gpio_pin_write_logic 0000           ??_gpio_pin_dirction_initialize 002A  
                          _port_register 0001                           _led_initialize FCDA  
